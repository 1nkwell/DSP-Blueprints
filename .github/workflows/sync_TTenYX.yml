name: Sync TTenYX's blueprints

on:
  schedule:
    - cron: "0 0 * * 0"
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      # 步骤1：检出当前仓库的 main 分支
      - name: Checkout main branch
        uses: actions/checkout@v4.2.2
        with:
          ref: main
          path: main

      # 步骤2：检查源仓库是否有新提交
      - name: Check source repo updates
        id: check-update
        run: |
          cd main
          LATEST_SHA=$(git ls-remote https://github.com/DSPBluePrints/FactoryBluePrints.git HEAD | awk '{print $1}')

          if [ -f ".github/last_sha.txt" ]; then
            CACHED_SHA=$(cat .github/last_sha.txt)
          else
            CACHED_SHA=""
          fi

          # 比较 SHA 是否变化
          if [ "$LATEST_SHA" != "$CACHED_SHA" ]; then
            echo "LATEST_SHA=$LATEST_SHA"
            echo "CACHED_SHA=$CACHED_SHA"
            echo "检测到更新，继续执行同步..."
            echo "$LATEST_SHA" > .github/last_sha.txt
            echo "UPDATE_DETECTED=true" >> $GITHUB_ENV
          else
            echo "无新更新，跳过后续步骤"
            echo "UPDATE_DETECTED=false" >> $GITHUB_ENV
          fi
          cd ..

      # 步骤4：检出源仓库内容（仅在检测到更新时运行）
      - name: Checkout sync repo
        if: env.UPDATE_DETECTED == 'true'
        uses: actions/checkout@v4.2.2
        with:
          repository: DSPBluePrints/FactoryBluePrints
          token: ${{secrets.ACTION_WORKFLOW}}
          path: sync
          sparse-checkout: |
            蓝图包_BP-Book

      # 步骤5：配置 Git（仅在检测到更新时运行）
      - name: Setup git
        if: env.UPDATE_DETECTED == 'true'
        uses: actions4git/setup-git@v1.0.3

      # 步骤6：同步文件并提交（仅在检测到更新时运行）
      - name: Sync folder to part branch
        if: env.UPDATE_DETECTED == 'true'
        run: |
          cd sync || { echo "Failed to enter 'sync' directory" >&2; exit 1; }
          if [[ -z $(find . -maxdepth 2 -type d -name "*TTenYX*" -print -quit) ]]; then
              echo "错误: 未找到包含'TTenYX'的目录." >&2
              exit 1
          fi
          find . -maxdepth 2 -type d -name "*TTenYX*" | while read -r source_dir; do
              if [[ ! -d "$source_dir" ]] || [[ ! -r "$source_dir" ]]; then
                  echo "错误: 无法访问源目录: $source_dir" >&2
                  continue
              fi

              dir_name=$(basename "$source_dir")
              target_dir="../main/$dir_name"
              
              echo "同步: $source_dir -> $target_dir"

              if rsync -av --delete "$source_dir/" "$target_dir/"; then
                  echo "✓ 成功: $dir_name"
              else
                  echo "✗ 失败: $dir_name" >&2
              fi

              echo "---"
          done
          cd ../main || { echo "Failed to enter '../main' directory" >&2; exit 1; }

          # 检查是否有实际变更再提交
          if git diff --quiet --exit-code; then
            echo "无文件变动，跳过提交"
          else
            git add './TTenYX' '.github/last_sha.txt'
            git commit -m "Action: Sync TTenYX's blueprints"
            git push origin main
          fi
